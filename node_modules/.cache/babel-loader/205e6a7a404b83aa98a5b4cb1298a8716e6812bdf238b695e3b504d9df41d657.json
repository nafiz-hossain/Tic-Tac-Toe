{"ast":null,"code":"var _jsxFileName = \"/home/nafiz/TigerIT/projects/Personal/Tic-Tac-Toe/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Toaster, toast } from 'react-hot-toast';\nimport './styles.css';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_STATE = {\n  squares: Array(9).fill(null),\n  xIsNext: true\n};\nconst calculateWinner = squares => {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n};\nconst isBoardFull = squares => {\n  return squares.every(square => square !== null);\n};\nconst Square = ({\n  value,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  className: \"square\",\n  onClick: onClick,\n  children: value\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 3\n}, this);\n_c = Square;\nconst Board = ({\n  squares,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"board\",\n  children: squares.map((square, i) => /*#__PURE__*/_jsxDEV(Square, {\n    value: square,\n    onClick: () => onClick(i)\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 42,\n  columnNumber: 3\n}, this);\n_c2 = Board;\nconst Game = () => {\n  _s();\n  const [state, setState] = useState(INITIAL_STATE);\n  const [winnerToastId, setWinnerToastId] = useState(null);\n  useEffect(() => {\n    const winner = calculateWinner(state.squares);\n    if (winner) {\n      const toastId = toast.success(`Winner: ${winner}`, {\n        duration: 5000,\n        position: 'bottom-center',\n        style: {\n          padding: '10px'\n        },\n        onDismiss: handleToastDismiss\n      });\n      setWinnerToastId(toastId);\n      const timer = setTimeout(() => {\n        resetGame();\n      }, 5000);\n      return () => {\n        clearTimeout(timer);\n        toast.dismiss(toastId);\n        setWinnerToastId(null);\n      };\n    } else if (isBoardFull(state.squares)) {\n      const toastId = toast.error('Draw', {\n        duration: 5000,\n        position: 'bottom-center',\n        onDismiss: handleToastDismiss\n      });\n      const timer = setTimeout(() => {\n        resetGame();\n      }, 5000);\n      return () => {\n        clearTimeout(timer);\n        toast.dismiss(toastId);\n      };\n    }\n  }, [state.squares, winnerToastId]);\n  const handleClick = i => {\n    const squaresCopy = state.squares.slice();\n    if (calculateWinner(squaresCopy) || squaresCopy[i]) return;\n    squaresCopy[i] = state.xIsNext ? 'X' : 'O';\n    setState({\n      squares: squaresCopy,\n      xIsNext: !state.xIsNext\n    });\n  };\n  const resetGame = () => {\n    setState(INITIAL_STATE);\n  };\n  const handleToastDismiss = () => {\n    resetGame();\n  };\n  let status = `Next player: ${state.xIsNext ? 'X' : 'O'}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        squares: state.squares,\n        onClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: resetGame,\n          variant: \"contained\",\n          color: \"success\",\n          children: \"Reset game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"Jc7dHplgvTmq77IX75g1i9lkDys=\");\n_c3 = Game;\nexport default Game;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","Toaster","toast","Button","jsxDEV","_jsxDEV","INITIAL_STATE","squares","Array","fill","xIsNext","calculateWinner","lines","i","length","a","b","c","isBoardFull","every","square","Square","value","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","map","_c2","Game","_s","state","setState","winnerToastId","setWinnerToastId","winner","toastId","success","duration","position","style","padding","onDismiss","handleToastDismiss","timer","setTimeout","resetGame","clearTimeout","dismiss","error","handleClick","squaresCopy","slice","status","variant","color","_c3","$RefreshReg$"],"sources":["/home/nafiz/TigerIT/projects/Personal/Tic-Tac-Toe/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Toaster, toast } from 'react-hot-toast';\nimport './styles.css';\nimport Button from '@mui/material/Button';\n\nconst INITIAL_STATE = {\n  squares: Array(9).fill(null),\n  xIsNext: true,\n};\n\nconst calculateWinner = (squares) => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n};\n\nconst isBoardFull = (squares) => {\n  return squares.every((square) => square !== null);\n};\n\nconst Square = ({ value, onClick }) => (\n  <button className=\"square\" onClick={onClick}>\n    {value}\n  </button>\n);\n\nconst Board = ({ squares, onClick }) => (\n  <div className=\"board\">\n    {squares.map((square, i) => (\n      <Square key={i} value={square} onClick={() => onClick(i)} />\n    ))}\n  </div>\n);\n\nconst Game = () => {\n  const [state, setState] = useState(INITIAL_STATE);\n  const [winnerToastId, setWinnerToastId] = useState(null);\n\n  useEffect(() => {\n    const winner = calculateWinner(state.squares);\n    if (winner) {\n      const toastId = toast.success(`Winner: ${winner}`, {\n        duration: 5000,\n        position: 'bottom-center',\n        style: {\n          padding: '10px',\n        },\n        onDismiss: handleToastDismiss,\n      });\n      setWinnerToastId(toastId);\n      const timer = setTimeout(() => {\n        resetGame();\n      }, 5000);\n      return () => {\n        clearTimeout(timer);\n        toast.dismiss(toastId);\n        setWinnerToastId(null);\n      };\n    } else if (isBoardFull(state.squares)) {\n      const toastId = toast.error('Draw', {\n        duration: 5000,\n        position: 'bottom-center',\n        onDismiss: handleToastDismiss,\n      });\n      const timer = setTimeout(() => {\n        resetGame();\n      }, 5000);\n      return () => {\n        clearTimeout(timer);\n        toast.dismiss(toastId);\n      };\n    }\n  }, [state.squares, winnerToastId]);\n\n  const handleClick = (i) => {\n    const squaresCopy = state.squares.slice();\n    if (calculateWinner(squaresCopy) || squaresCopy[i]) return;\n    squaresCopy[i] = state.xIsNext ? 'X' : 'O';\n    setState({\n      squares: squaresCopy,\n      xIsNext: !state.xIsNext,\n    });\n  };\n\n  const resetGame = () => {\n    setState(INITIAL_STATE);\n  };\n\n  const handleToastDismiss = () => {\n    resetGame();\n  };\n\n  let status = `Next player: ${state.xIsNext ? 'X' : 'O'}`;\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board squares={state.squares} onClick={handleClick} />\n      </div>\n      <div className=\"game-info\">\n        <div>{status}</div>\n        <div className=\"button-container\">\n          <Button onClick={resetGame} variant=\"contained\" color=\"success\">\n            Reset game\n          </Button>\n        </div>\n      </div>\n      <Toaster />\n    </div>\n  );\n};\n\nexport default Game;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}